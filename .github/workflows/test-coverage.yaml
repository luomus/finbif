on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest

    env:
      FINBIF_ACCESS_TOKEN: ${{ secrets.FINBIF_ACCESS_TOKEN }}
      FINBIF_DEV_ACCESS_TOKEN: ${{ secrets.FINBIF_DEV_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: MacOS brew system dependencies
        if: runner.os == 'macOS'
        run: |
           brew cask uninstall gfortran
           brew install proj
           brew install geos
           brew install gdal
           brew install udunits
           brew install libgit2
           brew install libssh2
           brew cask install gfortran

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: macOS-r-4.0-3-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: macOS-r-4.0-3-

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Configure Git user
        run: |
          git config --global user.email "ghau@example.com"
          git config --global user.name "GitHub Actions User"

      - name: Test coverage
        run: covr::codecov(line_exclusions = list('R/finbif_request_token.R' = 35:72))
        shell: Rscript {0}
